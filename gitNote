1.GIT对象模型
.SHA 对象名
.对象
	类型： blob tree commit tag
	大小
	内容

显示一个对象的原生内容，去除差异比较 查看一个commit对象
git show -s --pretty=raw  e407102b2b

查看tree对象类型
git ls-tree fb3a8bdd0ce

查看blob对象
git show 38379cf888059

2.git目录和工作目录
.git目录下的文件

|-- HEAD         # 这个git项目当前处在哪个分支里
|-- config       # 项目的配置信息，git config命令会改动它
|-- description  # 项目的描述信息
|-- hooks/       # 系统默认钩子脚本目录
|-- index        # 索引文件
|-- logs/        # 各个refs的历史信息
|-- objects/     # Git本地仓库的所有对象 (commits, trees, blobs, tags)
`-- refs/        # 标识你项目里的每个分支指向了哪个提交(commit)。

3.分支与合并@基础
创建分支 git branch experimental
查看分支 git branch
切换分支 git checkout experimental
合并分支 git merge experimental 将experimental分支的内容合并到当前的分支
图形化显示提交记录 gitk
删除分支 git branch -d experimental
撤销合并 git reset --hard HEAD 回退到当前的head版本，如果进行了merge，并且做了commit，需要回退到上次的版本即可
快速向前合并 当前的合并操作没有冲突，git自动进行了一个commit操作，这就是快速向前合并

4.比较
任意两个分支的差异 git diff master..test
上次提交与本地的差异 git diff
当前的索引和上次提交间的差异 git diff --cached
当前的工作目录与另外一个分支的差别 git diff test
显示差异点 git diff --stat

5.分布式的工作流程
共同使用一个远程仓库时，如何解决冲突
	git fetch 抓取远程分支的内容，更新本地的远程分支
	git diff master origin/master 比较本地分支和本地远程分支的差异
	git merge 将本地远程分支（origin/master）的内容合并到本地分支(master)，此时出现冲突
	手动解决冲突
	git add 添加本地冲突解决的文件
	git commit 提交本地冲突的解决结果
	git push 将本地的内容发布到远程仓库中

origin/master是分支master的追踪分支，fetch命令执行的时候，会把远程仓库的内容更新到追踪分支

6.rebase
可以改变历史的提交记录
可以将几个提交修改为一个提交
可以修改提交的顺序

7.交互式add
可以操作那些要添加的文件

8.git的撤销操作
	.当本地文件修改还没有add到暂存区时，撤销当前的变更
	 git restore fileName
	.当本地文件修改已经add到暂存区时,撤销暂存区的add
	 git restore --staged fileName
	.将当前的修改恢复到head版本（所有文件），所有的修改都会丢失
	 git reset --hard HEAD
    commit之后的撤销
    .撤销当前的commit的提交，暂存区和本地文件的修改不丢失
     git reset --soft head^
    .撤销当前的commit的提交，本地文件的修改不丢失
     git reset --mixed(默认值) head^


9.log和reflog日志的区别
